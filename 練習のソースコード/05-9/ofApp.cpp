#include "ofApp.h"

int r = 5;

int timeCount = 0;

// 練習5-9b　================================================
bool flg = true;    // 論理型


//--------------------------------------------------------------
void ofApp::setup(){
    ofSetWindowTitle("練習 5-9");     // ウインドウのタイトル
    
    ofSetCircleResolution(64);
    ofBackground(0, 0, 0);
}

//--------------------------------------------------------------
void ofApp::update(){

/*
    // 練習5-9c ================================================
    timeCount++;                    // フレームレート 60 なので 1秒で60カウントアップ
    if (timeCount % 60 == 0) {      // 60 で割った余りが 0
        flg = !flg;
    }
*/
}

//--------------------------------------------------------------
void ofApp::draw(){
    ofSetColor(255, 0, 0);

    // 練習5-9a ================================================
    for (int x = 5 ; x <= 795 ; x = x + 10) {
        for (int y = 5 ; y <= 595 ; y += 10) {
            ofDrawCircle(x, y, r);
        }
    }

/*
    // 練習5-9b ================================================
    for (int x = 5 ; x < 800 ; x = x + 10) {   // xの位置は5から10置きに800未満まで
        if (flg == true) {
            ofSetColor(255, 0, 0);          // flgが真なら赤
        } else {
            ofSetColor(0, 0, 255);          // flgが偽なら青
        }
        flg = !flg;                         // flgを反転
        // 縦
        for (int y = 5 ; y <= 595 ; y += 10) {
            ofDrawCircle(x, y, r);
        }
    }
*/
/*
    // 練習5-9b 別のやり方　================================================
    for (int x = 0 ; x < 80 ; x++) {    // 800 / 10 --> 80本の縦線
        if (x % 2 == 0) {
            ofSetColor(255, 0, 0);      // 偶数なら赤
        } else {
            ofSetColor(0, 0, 255);      // 奇数なら青
        }
        // 縦
        for (int y = 5 ; y <= 595 ; y = y + 10) {
            ofDrawCircle(5 + (x * 10), y, r);
        }
    }
*/
}

//--------------------------------------------------------------
void ofApp::keyPressed(int key){

}

//--------------------------------------------------------------
void ofApp::keyReleased(int key){

}

//--------------------------------------------------------------
void ofApp::mouseMoved(int x, int y ){

}

//--------------------------------------------------------------
void ofApp::mouseDragged(int x, int y, int button){

}

//--------------------------------------------------------------
void ofApp::mousePressed(int x, int y, int button){

}

//--------------------------------------------------------------
void ofApp::mouseReleased(int x, int y, int button){

}

//--------------------------------------------------------------
void ofApp::mouseEntered(int x, int y){

}

//--------------------------------------------------------------
void ofApp::mouseExited(int x, int y){

}

//--------------------------------------------------------------
void ofApp::windowResized(int w, int h){

}

//--------------------------------------------------------------
void ofApp::gotMessage(ofMessage msg){

}

//--------------------------------------------------------------
void ofApp::dragEvent(ofDragInfo dragInfo){ 

}
